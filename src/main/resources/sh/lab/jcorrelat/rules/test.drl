/*
 * Copyright 2011 Dustin Frisch<fooker@lab.sh>
 * 
 * This file is part of senchineru.
 * 
 * senchineru is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * senchineru is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with senchineru.  If not, see <http://www.gnu.org/licenses/>.
 */
package sh.lab.jcorrelat.rules;

import sh.lab.jcorrelat.Message;
import static sh.lab.jcorrelat.MessageFactory.messageFactory

import java.util.regex.Matcher
import java.util.regex.Pattern

import java.util.concurrent.CopyOnWriteArrayList;



declare Message
    @role(event)
    @timestamp(time)
end



rule "SSH bruteforce attempt"
no-loop
when
    Message (
        $host: host,
        $user: data["user"]
    )
    $attempts : CopyOnWriteArrayList(
        size >= 20
    ) from collect(
        Message(
            tags contains "SSHFAIL",
            host == $host,
            data["user"] == $user
        ) over window:time( 20s )
    )
then
    Message last = (Message) $attempts.get($attempts.size() - 1);
    
    Message msg = messageFactory(last)
        .setTime(last.getTime())
        .setSeverity(Message.Severity.EMERGENCY)
        .setFacility(Message.Facility.SECURITY)
        .setMessage(String.format("Bruteforce attack for %s from %s", last.getData("user"), last.getData("ip")))
        .addTag("BRUTEFORCE")
        .message();
    
    for (Object f : $attempts) {
        retract(f);
    }
    
    insert(msg);
end

rule "Successfull SSH bruteforce"
no-loop
when
    $attempt : Message(
        tags contains "SSHFAIL",
        tags contains "BRUTEFORCE",
        $host: host,
        $user: data["user"]
    )
    $success : Message(
        host == $host,
        data["user"] == $user,
        tags contains "SSHSUCCESS",
        this finishes[ 10s ] $attempt
    )
then
    $attempt.addTag("BRUTEFORCE");
    $attempt.addTag("INCIDENT");
    $attempt.setSeverity(Message.Severity.EMERGENCY);
    $attempt.setFacility(Message.Facility.SECURITY);
    $attempt.setMessage($attempt.getMessage() + " (successful bruteforce attac)");

    update($attempt);
end
